# docker image
image: forum/metdisease

###########################################################
# variables
variables:
  # docker
  DOCKER_IMAGE: "forum/metdisease"
  # SSH / SCP
  SSH_OPTS: " -q -t "
  SSH_USER: "gitlab-bot"
  SSH_HOST: "endpoint-metabolomics.ara.inrae.fr"
  SSH_PATH: "/forum/metdiseasedatabase"
  # fetch data
  WGET_URL: "https://pfem.clermont.inra.fr/pydio/public/7af464"
  WGET_LOGIN: "--user none --password $PYDIO_PASSWD"
  # cache
  CACHE_BASH: "/tmp/gitlab-ci-cache"
  CACHE_DOCKER: "/root/.cache-ci"

###########################################################
# cache 
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - docker_resources/
    - app/data/
    
###########################################################
# stages
stages:
  - init
  - docker_env
  - test
  - deploy

###########################################################
# jobs

# job to fetch resources from pydio
get resources:
  stage: init
  tags:
    - docker
  image: cirrusci/wget
  before_script:
    - echo "==================================";
    - echo "[info] load cache ";
    - test -d $CACHE_DOCKER || mkdir -p $CACHE_DOCKER
    - test -d $CI_PROJECT_DIR/docker_resources/ || mkdir -p $CI_PROJECT_DIR/docker_resources/
    - test -f $CACHE_DOCKER/HumanGEM.ttl && cp -r $CACHE_DOCKER/HumanGEM.ttl $CI_PROJECT_DIR/docker_resources/HumanGEM.ttl
    - test -f $CACHE_DOCKER/metanetx.ttl && cp -r $CACHE_DOCKER/metanetx.ttl $CI_PROJECT_DIR/docker_resources/metanetx.ttl
    - test -f $CACHE_DOCKER/vocabulary && cp -r $CACHE_DOCKER/vocabulary $CI_PROJECT_DIR/docker_resources/vocabulary
  script:
    - echo "==================================";
    - echo "[info] get resources from Pydio";
    - test -f $CI_PROJECT_DIR/docker_resources/vocabulary || wget -O $CI_PROJECT_DIR/docker_resources/vocabulary.zip $WGET_LOGIN $WGET_URL/dl/vocabulary
  after_script:
    - echo "==================================";
    - echo "[info] save cache ";
    - cp -r $CI_PROJECT_DIR/docker_resources/HumanGEM.ttl $CACHE_DOCKER/HumanGEM.ttl
    - cp -r $CI_PROJECT_DIR/docker_resources/metanetx.ttl $CACHE_DOCKER/metanetx.ttl
    - cp -r $CI_PROJECT_DIR/docker_resources/vocabulary.zip $CACHE_DOCKER/vocabulary.zip

update git repo:
  stage: init
  image: pfem/ssh-utils
  tags:
    - docker
  only:
    refs:
      - tags
  before_script:
    - echo "==================================";
    - echo "[info] init SSH key";
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ssh-add <(echo "$SSH_PRIVATE_KEY" | base64 -d)
  script:
    - echo "==================================";
    - echo "[info] update git repository on $SSH_HOST ";
    - ssh $SSH_OPTS $SSH_USER@$SSH_HOST "/home/gitlab-bot/update-metdiseasedatabase-sh"
  after_script:
    - echo "==================================";

# job to build the docker env.
docker env:
  stage: docker_env
  tags:
    - bash
  before_script:
    - echo "==================================";
    - echo "[info] load cache ";
    - test -d $CACHE_BASH || mkdir -p $CACHE_BASH
    - test -d docker_resources/ || mkdir -p docker_resources/
    - cp $CACHE_BASH/HumanGEM.ttl docker_resources/HumanGEM.ttl
    - cp $CACHE_BASH/metanetx.ttl docker_resources/metanetx.ttl
    - cp $CACHE_BASH/vocabulary.zip docker_resources/vocabulary.zip
    - echo "[info] unzip files ";
    - rm -rf docker_resources/vocabulary/*
    - unzip docker_resources/vocabulary.zip -d docker_resources/
    - ls -al docker_resources/vocabulary/
    - ls -al docker_resources/
  script:
    - echo "==================================";
    - echo "[info] run 'docker build image' ";
    - docker build -t $DOCKER_IMAGE .

# job to run tests
test:
  stage: test
  tags:
    - docker
  before_script:
    - echo "==================================";
    - echo "[info] check TTF file symlink (or create it)";
    - test -d $CI_PROJECT_DIR/data/HumanGEM || mkdir -p $CI_PROJECT_DIR/data/HumanGEM
    - test -d $CI_PROJECT_DIR/data/MetaNetX || mkdir -p $CI_PROJECT_DIR/data/MetaNetX
    - test -f $CI_PROJECT_DIR/data/HumanGEM/HumanGEM.ttl || ln -s $CI_PROJECT_DIR/docker_resources/HumanGEM.ttl $CI_PROJECT_DIR/data/HumanGEM/HumanGEM.ttl
    - test -f $CI_PROJECT_DIR/data/MetaNetX/metanetx.ttl || ln -s $CI_PROJECT_DIR/docker_resources/metanetx.ttl $CI_PROJECT_DIR/data/MetaNetX/metanetx.ttl
  script:
    - echo "==================================";
    - echo "[info] test 'docker image' ";
    - python3 $CI_PROJECT_DIR/app/build_RDF_store/Elink_ressource_creator.py
    - python3 $CI_PROJECT_DIR/app/build_RDF_store/download_functions.py
    - python3 $CI_PROJECT_DIR/app/build_RDF_store/parse_pubchem_RDF.py
    - python3 $CI_PROJECT_DIR/app/metab2mesh/processing_functions.py
    - python3 $CI_PROJECT_DIR/app/metab2mesh/SPARQL/cid_mesh.py
    - python3 $CI_PROJECT_DIR/app/SBML_upgrade/Id_mapping.py
    - python3 $CI_PROJECT_DIR/app/SBML_upgrade/processing_functions.py

# build artifact for dev. branches
relaunch scripts:
  stage: deploy
  image: pfem/ssh-utils
  tags:
    - docker
  only:
    refs:
      - tags
  before_script:
    - echo "==================================";
    - echo "[info] init SSH key";
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ssh-add <(echo "$SSH_PRIVATE_KEY" | base64 -d)
  script:
    - echo "==================================";
    - echo "[info] run deploy_endpoint.sh on remote server ";
    - ssh $SSH_OPTS $SSH_USER@$SSH_HOST " $SSH_PATH/deploy_endpoint.sh -pt $PYDIO_PASSWD ";
